# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import magnet_pb2 as magnet__pb2


class MagnetStub(object):
    """Build Steps :
    python3 -m venv env && source env/bin/activate
    python3 -m pip install grpcio grpcio-tools
    python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. magnet.proto

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMagnet = channel.unary_unary(
                '/Magnet/GetMagnet',
                request_serializer=magnet__pb2.MagnetRequest.SerializeToString,
                response_deserializer=magnet__pb2.MagnetReply.FromString,
                )


class MagnetServicer(object):
    """Build Steps :
    python3 -m venv env && source env/bin/activate
    python3 -m pip install grpcio grpcio-tools
    python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. magnet.proto

    """

    def GetMagnet(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MagnetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMagnet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMagnet,
                    request_deserializer=magnet__pb2.MagnetRequest.FromString,
                    response_serializer=magnet__pb2.MagnetReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Magnet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Magnet(object):
    """Build Steps :
    python3 -m venv env && source env/bin/activate
    python3 -m pip install grpcio grpcio-tools
    python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. magnet.proto

    """

    @staticmethod
    def GetMagnet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Magnet/GetMagnet',
            magnet__pb2.MagnetRequest.SerializeToString,
            magnet__pb2.MagnetReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
